// Generated by Dagger (https://dagger.dev).
package com.rizz.mandiri.assignment.features.movie.presentation.movieListScreen;

import com.rizz.mandiri.assignment.features.movie.domain.usecases.GetMoviesUseCase;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class MovieListViewModel_Factory implements Factory<MovieListViewModel> {
  private final Provider<GetMoviesUseCase> getMoviesProvider;

  public MovieListViewModel_Factory(Provider<GetMoviesUseCase> getMoviesProvider) {
    this.getMoviesProvider = getMoviesProvider;
  }

  @Override
  public MovieListViewModel get() {
    return newInstance(getMoviesProvider.get());
  }

  public static MovieListViewModel_Factory create(Provider<GetMoviesUseCase> getMoviesProvider) {
    return new MovieListViewModel_Factory(getMoviesProvider);
  }

  public static MovieListViewModel newInstance(GetMoviesUseCase getMovies) {
    return new MovieListViewModel(getMovies);
  }
}
